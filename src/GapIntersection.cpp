// Copyright (C) 2022 Mathieu Dutour Sikiric <mathieu.dutour@gmail.com>
#include "Permutation.h"
#include "gmpxx.h"
#include <fstream>

#include "Group.h"

int main(int argc, char *argv[]) {
  try {
    using Tidx = uint16_t;
    using Telt = permutalib::SingleSidedPerm<Tidx>;
    using Tint = mpz_class;
    using Tgroup = permutalib::Group<Telt, Tint>;
    if (argc != 3 && argc != 4) {
      std::cerr << "GapIntersection [grp1] [grp2]\n";
      std::cerr << "or\n";
      std::cerr << "GapIntersection [grp1] [grp2] [OutFile]\n";
      std::cerr << "with EXMP generated by GenerateExample.g\n";
      throw permutalib::PermutalibException{1};
    }
    std::string eFile1 = argv[1];
    std::string eFile2 = argv[2];
    std::ifstream is1(eFile1);
    std::ifstream is2(eFile2);
    Tgroup G1 = permutalib::ReadGroupFromStream<Tgroup>(is1);
    Tgroup G2 = permutalib::ReadGroupFromStream<Tgroup>(is2);
    //
    Tgroup eInt = G1.Intersection(G2);
    //
    if (argc == 4) {
      std::string OutputFile = argv[3];
      std::ofstream os(OutputFile);
      os << "return " + eInt.GapString() + ";\n";
    } else {
      std::cerr << "CPP |eG2|=" << eInt.size() << "\n";
      std::cerr << "return " + eInt.GapString() + ";\n";
    }
    std::cerr << "CPP Normal completion of the program\n";
  } catch (permutalib::PermutalibException const &e) {
    std::cerr << "Erroneous completion of the program\n";
    exit(e.eVal);
  }
  return 0;
}
